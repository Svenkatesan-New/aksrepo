# name: Deploy Flask App to AKS

# on:
#   push:
#     branches:
#       - main  # Trigger deployment on push to the main branch

# jobs:
#   build_and_deploy:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write       # Grants permission to use the OIDC token
#       contents: write       # Grants permission to push changes to the repository
#       actions: read 

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Log in to Azure
#       uses: azure/login@v1
#       with:
#         client-id: ${{ secrets.AZURE_CLIENT_ID }}
#         client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
#         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

#     - name: Log in to Azure Container Registry
#       run: |
#         echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_NAME }}.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password-stdin

#     - name: Build Docker image
#       run: |
#         docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/flask-app:latest .

#     - name: Push Docker image to ACR
#       run: |
#         docker push ${{ secrets.ACR_NAME }}.azurecr.io/flask-app:latest

#     - name: Set up kubectl
#       uses: azure/setup-kubectl@v1
#       with:
#         kubeconfig: ${{ secrets.KUBECONFIG }}

#     - name: Deploy to AKS
#       run: |
#         kubectl apply -f k8s-deployment.yml
#         kubectl set image deployment/flask-app flask-app=${{ secrets.ACR_NAME }}.azurecr.io/flask-app:latest
#         kubectl rollout status deployment/flask-app
name: Deploy Flask app to AKS

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Azure Container Registry (ACR)
      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: newacrfordemo.azurecr.io
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      # Build and push the Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t newacrfordemo.azurecr.io/flask-app:${{ github.sha }} .
          docker push newacrfordemo.azurecr.io/flask-app:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login to Azure using Service Principal
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set AKS credentials
      - name: Set AKS credentials
        run: |
          az aks get-credentials --resource-group myresourcegroup --name myAKSCluster

      # Deploy to AKS using kubectl
      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s-deployment.yml
          kubectl apply -f service.yaml
